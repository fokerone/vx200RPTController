version: '3.8'

services:
  # Servicio principal VX200 Controller
  vx200-controller:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vx200-controller
    restart: unless-stopped
    ports:
      - "3000:3000"    # Mapa APRS
    volumes:
      # Persistencia de datos importantes
      - ./logs:/app/logs
      - ./config:/app/config
      - ./data:/app/data
      - ./.env:/app/.env:ro
      # Socket de audio compartido
      - pulse-socket:/tmp/pulse-socket
      # Acceso al socket Docker para monitoreo (opcional)
      - /var/run/docker.sock:/var/run/docker.sock:ro
    devices:
      # Acceso directo a dispositivos de audio
      - /dev/snd:/dev/snd
    environment:
      # Configuración de audio
      - PULSE_SERVER=unix:/tmp/pulse-socket
      - AUDIO_DEVICE=default
      - NODE_ENV=production
      # Configuración de timezone
      - TZ=America/Argentina/Mendoza
    depends_on:
      - pulseaudio-server
    networks:
      - vx200-network
    # Configuración de recursos para estabilidad
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    # Configuración de seguridad
    security_opt:
      - no-new-privileges:true
    # Healthcheck personalizado
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/repeater"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Servicio de audio PulseAudio dedicado
  pulseaudio-server:
    image: alpine:3.18
    container_name: vx200-pulseaudio
    restart: unless-stopped
    volumes:
      - pulse-socket:/tmp/pulse-socket
    devices:
      - /dev/snd:/dev/snd
    environment:
      - TZ=America/Argentina/Mendoza
    command: >
      sh -c "
      echo 'Instalando PulseAudio...' &&
      apk add --no-cache pulseaudio pulseaudio-alsa alsa-utils &&
      echo 'Configurando PulseAudio...' &&
      mkdir -p /root/.config/pulse &&
      echo 'autospawn = no' > /root/.config/pulse/client.conf &&
      echo 'default-server = unix:/tmp/pulse-socket' >> /root/.config/pulse/client.conf &&
      echo 'enable-shm = false' >> /root/.config/pulse/client.conf &&
      echo 'Iniciando servidor PulseAudio...' &&
      pulseaudio --system --disallow-exit --disallow-module-loading --no-cpu-limit --realtime --log-level=2 --exit-idle-time=-1 -v
      "
    networks:
      - vx200-network
    # Configuración de recursos mínimos para audio
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    # Healthcheck para el servidor de audio
    healthcheck:
      test: ["CMD", "ps", "aux", "|", "grep", "pulseaudio"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Servicio opcional de monitoreo (comentado por defecto)
  # vx200-monitor:
  #   image: prom/node-exporter:latest
  #   container_name: vx200-monitor
  #   restart: unless-stopped
  #   ports:
  #     - "9100:9100"
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /:/rootfs:ro
  #   command:
  #     - '--path.procfs=/host/proc'
  #     - '--path.rootfs=/rootfs'
  #     - '--path.sysfs=/host/sys'
  #     - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
  #   networks:
  #     - vx200-network

# Volúmenes persistentes
volumes:
  pulse-socket:
    driver: local
  vx200-logs:
    driver: local
  vx200-data:
    driver: local

# Red personalizada para aislamiento
networks:
  vx200-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1